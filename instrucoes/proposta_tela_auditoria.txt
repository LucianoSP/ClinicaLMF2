import React, { useState } from 'react';
import { Search, Filter, FileText, AlertCircle, CheckCircle, Clock } from 'lucide-react';
import { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';
import { Alert, AlertTitle, AlertDescription } from '@/components/ui/alert';

const AuditoriaInterface = () => {
  const [selectedTab, setSelectedTab] = useState('pendentes');

  // Dados de exemplo
  const divergencias = [
    {
      id: 1,
      guia: '123456',
      paciente: 'João Silva',
      tipo: 'Assinatura Ausente',
      status: 'pendente',
      dataIdentificacao: '2024-12-14',
      descricao: 'execucao sem assinatura do paciente'
    },
    {
      id: 2,
      guia: '789012',
      paciente: 'Maria Santos',
      tipo: 'Quantidade Divergente',
      status: 'em_analise',
      dataIdentificacao: '2024-12-14',
      descricao: 'Quantidade de execuções maior que autorizado'
    }
  ];

  return (
    <div className="p-6 max-w-7xl mx-auto">
      {/* Cabeçalho */}
      <div className="mb-8">
        <h1 className="text-3xl font-bold mb-2">Auditoria de execucaos</h1>
        <p className="text-gray-600">Sistema de controle e resolução de divergências</p>
      </div>

      {/* Filtros e Pesquisa */}
      <div className="flex flex-wrap gap-4 mb-6">
        <div className="flex-1 min-w-[300px]">
          <div className="relative">
            <Search className="absolute left-3 top-2.5 h-4 w-4 text-gray-500" />
            <input
              type="text"
              placeholder="Pesquisar por guia, paciente..."
              className="w-full pl-10 pr-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
          </div>
        </div>
        <div className="flex gap-2">
          <button className="flex items-center px-4 py-2 bg-white border rounded-lg hover:bg-gray-50">
            <Filter className="h-4 w-4 mr-2" />
            Filtros
          </button>
          <button className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
            Exportar Relatório
          </button>
        </div>
      </div>

      {/* Tabs de Status */}
      <div className="flex border-b mb-6">
        <button
          onClick={() => setSelectedTab('pendentes')}
          className={`px-6 py-3 font-medium ${
            selectedTab === 'pendentes'
              ? 'border-b-2 border-blue-600 text-blue-600'
              : 'text-gray-600'
          }`}
        >
          Pendentes
        </button>
        <button
          onClick={() => setSelectedTab('em_analise')}
          className={`px-6 py-3 font-medium ${
            selectedTab === 'em_analise'
              ? 'border-b-2 border-blue-600 text-blue-600'
              : 'text-gray-600'
          }`}
        >
          Em Análise
        </button>
        <button
          onClick={() => setSelectedTab('resolvidas')}
          className={`px-6 py-3 font-medium ${
            selectedTab === 'resolvidas'
              ? 'border-b-2 border-blue-600 text-blue-600'
              : 'text-gray-600'
          }`}
        >
          Resolvidas
        </button>
      </div>

      {/* Cards de Resumo */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
        <Card>
          <CardHeader className="flex flex-row items-center justify-between pb-2">
            <CardTitle className="text-sm font-medium text-gray-500">Divergências Pendentes</CardTitle>
            <AlertCircle className="h-4 w-4 text-yellow-500" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">23</div>
            <p className="text-xs text-gray-500">+5 nas últimas 24h</p>
          </CardContent>
        </Card>
        <Card>
          <CardHeader className="flex flex-row items-center justify-between pb-2">
            <CardTitle className="text-sm font-medium text-gray-500">Em Análise</CardTitle>
            <Clock className="h-4 w-4 text-blue-500" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">15</div>
            <p className="text-xs text-gray-500">7 aguardando resposta</p>
          </CardContent>
        </Card>
        <Card>
          <CardHeader className="flex flex-row items-center justify-between pb-2">
            <CardTitle className="text-sm font-medium text-gray-500">Resolvidas Hoje</CardTitle>
            <CheckCircle className="h-4 w-4 text-green-500" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">12</div>
            <p className="text-xs text-gray-500">85% taxa de resolução</p>
          </CardContent>
        </Card>
      </div>

      {/* Lista de Divergências */}
      <div className="space-y-4">
        {divergencias.map(divergencia => (
          <Alert key={divergencia.id} className="flex items-center justify-between">
            <div className="flex-1">
              <div className="flex items-center gap-2 mb-1">
                <FileText className="h-4 w-4" />
                <AlertTitle className="text-sm font-semibold">
                  Guia: {divergencia.guia} - {divergencia.paciente}
                </AlertTitle>
                <span className={`px-2 py-1 rounded-full text-xs ${
                  divergencia.status === 'pendente' 
                    ? 'bg-yellow-100 text-yellow-800'
                    : 'bg-blue-100 text-blue-800'
                }`}>
                  {divergencia.status === 'pendente' ? 'Pendente' : 'Em Análise'}
                </span>
              </div>
              <AlertDescription className="text-sm text-gray-600">
                {divergencia.descricao}
                <div className="mt-1 text-xs text-gray-500">
                  Identificado em: {divergencia.dataIdentificacao}
                </div>
              </AlertDescription>
            </div>
            <button className="px-4 py-2 text-sm bg-white border rounded-lg hover:bg-gray-50">
              Analisar
            </button>
          </Alert>
        ))}
      </div>
    </div>
  );
};

export default AuditoriaInterface;